// Code generated by protoc-gen-go.
// source: user.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	Tag
	Answer
	Account
	Tlation
	Region
	Media
	Pass
	User
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Tag struct {
	Value    string `protobuf:"bytes,1,opt,name=Value" json:"Value,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=Category" json:"Category,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto1.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Tag) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type Answer struct {
	QuestionId string `protobuf:"bytes,1,opt,name=QuestionId" json:"QuestionId,omitempty"`
	Answer     string `protobuf:"bytes,2,opt,name=Answer" json:"Answer,omitempty"`
}

func (m *Answer) Reset()                    { *m = Answer{} }
func (m *Answer) String() string            { return proto1.CompactTextString(m) }
func (*Answer) ProtoMessage()               {}
func (*Answer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Answer) GetQuestionId() string {
	if m != nil {
		return m.QuestionId
	}
	return ""
}

func (m *Answer) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

type Account struct {
	Value   string `protobuf:"bytes,1,opt,name=Value" json:"Value,omitempty"`
	Network string `protobuf:"bytes,2,opt,name=Network" json:"Network,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto1.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Account) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Account) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

type Tlation struct {
	Id string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Zh string `protobuf:"bytes,2,opt,name=Zh" json:"Zh,omitempty"`
	En string `protobuf:"bytes,3,opt,name=En" json:"En,omitempty"`
	Ko string `protobuf:"bytes,4,opt,name=Ko" json:"Ko,omitempty"`
	Ja string `protobuf:"bytes,5,opt,name=Ja" json:"Ja,omitempty"`
}

func (m *Tlation) Reset()                    { *m = Tlation{} }
func (m *Tlation) String() string            { return proto1.CompactTextString(m) }
func (*Tlation) ProtoMessage()               {}
func (*Tlation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Tlation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tlation) GetZh() string {
	if m != nil {
		return m.Zh
	}
	return ""
}

func (m *Tlation) GetEn() string {
	if m != nil {
		return m.En
	}
	return ""
}

func (m *Tlation) GetKo() string {
	if m != nil {
		return m.Ko
	}
	return ""
}

func (m *Tlation) GetJa() string {
	if m != nil {
		return m.Ja
	}
	return ""
}

type Region struct {
	Country  *Tlation `protobuf:"bytes,1,opt,name=Country" json:"Country,omitempty"`
	Province *Tlation `protobuf:"bytes,2,opt,name=Province" json:"Province,omitempty"`
	City     *Tlation `protobuf:"bytes,3,opt,name=City" json:"City,omitempty"`
	District *Tlation `protobuf:"bytes,4,opt,name=District" json:"District,omitempty"`
}

func (m *Region) Reset()                    { *m = Region{} }
func (m *Region) String() string            { return proto1.CompactTextString(m) }
func (*Region) ProtoMessage()               {}
func (*Region) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Region) GetCountry() *Tlation {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Region) GetProvince() *Tlation {
	if m != nil {
		return m.Province
	}
	return nil
}

func (m *Region) GetCity() *Tlation {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *Region) GetDistrict() *Tlation {
	if m != nil {
		return m.District
	}
	return nil
}

type Media struct {
	Id          string  `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	UserId      string  `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
	CreatedTime int64   `protobuf:"varint,3,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	UpdatedTime int64   `protobuf:"varint,4,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	Index       int32   `protobuf:"varint,5,opt,name=Index" json:"Index,omitempty"`
	Identifier  string  `protobuf:"bytes,6,opt,name=Identifier" json:"Identifier,omitempty"`
	Width       int32   `protobuf:"varint,7,opt,name=Width" json:"Width,omitempty"`
	Height      int32   `protobuf:"varint,8,opt,name=Height" json:"Height,omitempty"`
	DHash       uint64  `protobuf:"varint,9,opt,name=DHash" json:"DHash,omitempty"`
	VIdentifier string  `protobuf:"bytes,10,opt,name=VIdentifier" json:"VIdentifier,omitempty"`
	VWidth      int32   `protobuf:"varint,11,opt,name=VWidth" json:"VWidth,omitempty"`
	VHeight     int32   `protobuf:"varint,12,opt,name=VHeight" json:"VHeight,omitempty"`
	VDuration   float64 `protobuf:"fixed64,13,opt,name=VDuration" json:"VDuration,omitempty"`
	AIdentifier string  `protobuf:"bytes,14,opt,name=AIdentifier" json:"AIdentifier,omitempty"`
	ADuration   float64 `protobuf:"fixed64,15,opt,name=ADuration" json:"ADuration,omitempty"`
	Status      string  `protobuf:"bytes,16,opt,name=Status" json:"Status,omitempty"`
	Rel         string  `protobuf:"bytes,17,opt,name=Rel" json:"Rel,omitempty"`
	First       bool    `protobuf:"varint,18,opt,name=First" json:"First,omitempty"`
	Other       bool    `protobuf:"varint,19,opt,name=Other" json:"Other,omitempty"`
}

func (m *Media) Reset()                    { *m = Media{} }
func (m *Media) String() string            { return proto1.CompactTextString(m) }
func (*Media) ProtoMessage()               {}
func (*Media) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Media) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Media) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Media) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Media) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *Media) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Media) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Media) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Media) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Media) GetDHash() uint64 {
	if m != nil {
		return m.DHash
	}
	return 0
}

func (m *Media) GetVIdentifier() string {
	if m != nil {
		return m.VIdentifier
	}
	return ""
}

func (m *Media) GetVWidth() int32 {
	if m != nil {
		return m.VWidth
	}
	return 0
}

func (m *Media) GetVHeight() int32 {
	if m != nil {
		return m.VHeight
	}
	return 0
}

func (m *Media) GetVDuration() float64 {
	if m != nil {
		return m.VDuration
	}
	return 0
}

func (m *Media) GetAIdentifier() string {
	if m != nil {
		return m.AIdentifier
	}
	return ""
}

func (m *Media) GetADuration() float64 {
	if m != nil {
		return m.ADuration
	}
	return 0
}

func (m *Media) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Media) GetRel() string {
	if m != nil {
		return m.Rel
	}
	return ""
}

func (m *Media) GetFirst() bool {
	if m != nil {
		return m.First
	}
	return false
}

func (m *Media) GetOther() bool {
	if m != nil {
		return m.Other
	}
	return false
}

type Pass struct {
	Id          string  `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	UserId      string  `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
	OtherUserId string  `protobuf:"bytes,3,opt,name=OtherUserId" json:"OtherUserId,omitempty"`
	Count       int32   `protobuf:"varint,4,opt,name=Count" json:"Count,omitempty"`
	CTime       int64   `protobuf:"varint,5,opt,name=CTime" json:"CTime,omitempty"`
	LTime       int64   `protobuf:"varint,6,opt,name=LTime" json:"LTime,omitempty"`
	Longitude   float64 `protobuf:"fixed64,7,opt,name=Longitude" json:"Longitude,omitempty"`
	Latitude    float64 `protobuf:"fixed64,8,opt,name=Latitude" json:"Latitude,omitempty"`
}

func (m *Pass) Reset()                    { *m = Pass{} }
func (m *Pass) String() string            { return proto1.CompactTextString(m) }
func (*Pass) ProtoMessage()               {}
func (*Pass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Pass) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pass) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Pass) GetOtherUserId() string {
	if m != nil {
		return m.OtherUserId
	}
	return ""
}

func (m *Pass) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Pass) GetCTime() int64 {
	if m != nil {
		return m.CTime
	}
	return 0
}

func (m *Pass) GetLTime() int64 {
	if m != nil {
		return m.LTime
	}
	return 0
}

func (m *Pass) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Pass) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

type User struct {
	Id              string     `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Name            string     `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Des             string     `protobuf:"bytes,3,opt,name=Des" json:"Des,omitempty"`
	Industry        string     `protobuf:"bytes,4,opt,name=Industry" json:"Industry,omitempty"`
	Company         string     `protobuf:"bytes,5,opt,name=Company" json:"Company,omitempty"`
	Department      string     `protobuf:"bytes,6,opt,name=Department" json:"Department,omitempty"`
	School          string     `protobuf:"bytes,7,opt,name=School" json:"School,omitempty"`
	Major           string     `protobuf:"bytes,8,opt,name=Major" json:"Major,omitempty"`
	Hometown        string     `protobuf:"bytes,9,opt,name=Hometown" json:"Hometown,omitempty"`
	Hangouts        string     `protobuf:"bytes,10,opt,name=Hangouts" json:"Hangouts,omitempty"`
	Tags            []*Tag     `protobuf:"bytes,11,rep,name=Tags" json:"Tags,omitempty"`
	Accounts        []*Account `protobuf:"bytes,12,rep,name=Accounts" json:"Accounts,omitempty"`
	Answers         []*Answer  `protobuf:"bytes,13,rep,name=Answers" json:"Answers,omitempty"`
	Gender          string     `protobuf:"bytes,14,opt,name=Gender" json:"Gender,omitempty"`
	Looking         string     `protobuf:"bytes,15,opt,name=Looking" json:"Looking,omitempty"`
	Intent          string     `protobuf:"bytes,16,opt,name=Intent" json:"Intent,omitempty"`
	Longitude       float64    `protobuf:"fixed64,17,opt,name=Longitude" json:"Longitude,omitempty"`
	Latitude        float64    `protobuf:"fixed64,18,opt,name=Latitude" json:"Latitude,omitempty"`
	Distance        float64    `protobuf:"fixed64,19,opt,name=Distance" json:"Distance,omitempty"`
	Region          *Region    `protobuf:"bytes,20,opt,name=Region" json:"Region,omitempty"`
	Radius          int32      `protobuf:"varint,21,opt,name=Radius" json:"Radius,omitempty"`
	MaxAge          int32      `protobuf:"varint,22,opt,name=MaxAge" json:"MaxAge,omitempty"`
	MinAge          int32      `protobuf:"varint,23,opt,name=MinAge" json:"MinAge,omitempty"`
	Contacts        bool       `protobuf:"varint,24,opt,name=Contacts" json:"Contacts,omitempty"`
	MutualContacts  bool       `protobuf:"varint,25,opt,name=MutualContacts" json:"MutualContacts,omitempty"`
	Email           string     `protobuf:"bytes,26,opt,name=Email" json:"Email,omitempty"`
	CountryCode     int32      `protobuf:"varint,27,opt,name=CountryCode" json:"CountryCode,omitempty"`
	MobileNumber    string     `protobuf:"bytes,28,opt,name=MobileNumber" json:"MobileNumber,omitempty"`
	Password        string     `protobuf:"bytes,29,opt,name=Password" json:"Password,omitempty"`
	Birthdate       int64      `protobuf:"varint,30,opt,name=Birthdate" json:"Birthdate,omitempty"`
	Pictures        []*Media   `protobuf:"bytes,31,rep,name=Pictures" json:"Pictures,omitempty"`
	LastActivity    int64      `protobuf:"varint,32,opt,name=LastActivity" json:"LastActivity,omitempty"`
	UpdatedTime     int64      `protobuf:"varint,33,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	CreatedTime     int64      `protobuf:"varint,34,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	Passby          *Pass      `protobuf:"bytes,35,opt,name=Passby" json:"Passby,omitempty"`
	Popularity      float64    `protobuf:"fixed64,36,opt,name=Popularity" json:"Popularity,omitempty"`
	PreviewMessage  bool       `protobuf:"varint,37,opt,name=PreviewMessage" json:"PreviewMessage,omitempty"`
	ShowMomentLikes bool       `protobuf:"varint,38,opt,name=ShowMomentLikes" json:"ShowMomentLikes,omitempty"`
	WorkActive      bool       `protobuf:"varint,39,opt,name=WorkActive" json:"WorkActive,omitempty"`
	StudyActive     bool       `protobuf:"varint,40,opt,name=StudyActive" json:"StudyActive,omitempty"`
	ScenarioIds     []string   `protobuf:"bytes,41,rep,name=ScenarioIds" json:"ScenarioIds,omitempty"`
	Category        string     `protobuf:"bytes,42,opt,name=Category" json:"Category,omitempty"`
	ExpiresTime     int64      `protobuf:"varint,43,opt,name=ExpiresTime" json:"ExpiresTime,omitempty"`
	Status          string     `protobuf:"bytes,44,opt,name=Status" json:"Status,omitempty"`
	Type            string     `protobuf:"bytes,45,opt,name=Type" json:"Type,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto1.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDes() string {
	if m != nil {
		return m.Des
	}
	return ""
}

func (m *User) GetIndustry() string {
	if m != nil {
		return m.Industry
	}
	return ""
}

func (m *User) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *User) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

func (m *User) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *User) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *User) GetHometown() string {
	if m != nil {
		return m.Hometown
	}
	return ""
}

func (m *User) GetHangouts() string {
	if m != nil {
		return m.Hangouts
	}
	return ""
}

func (m *User) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *User) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *User) GetAnswers() []*Answer {
	if m != nil {
		return m.Answers
	}
	return nil
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetLooking() string {
	if m != nil {
		return m.Looking
	}
	return ""
}

func (m *User) GetIntent() string {
	if m != nil {
		return m.Intent
	}
	return ""
}

func (m *User) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *User) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *User) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *User) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *User) GetRadius() int32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *User) GetMaxAge() int32 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *User) GetMinAge() int32 {
	if m != nil {
		return m.MinAge
	}
	return 0
}

func (m *User) GetContacts() bool {
	if m != nil {
		return m.Contacts
	}
	return false
}

func (m *User) GetMutualContacts() bool {
	if m != nil {
		return m.MutualContacts
	}
	return false
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCountryCode() int32 {
	if m != nil {
		return m.CountryCode
	}
	return 0
}

func (m *User) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetBirthdate() int64 {
	if m != nil {
		return m.Birthdate
	}
	return 0
}

func (m *User) GetPictures() []*Media {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func (m *User) GetLastActivity() int64 {
	if m != nil {
		return m.LastActivity
	}
	return 0
}

func (m *User) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *User) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *User) GetPassby() *Pass {
	if m != nil {
		return m.Passby
	}
	return nil
}

func (m *User) GetPopularity() float64 {
	if m != nil {
		return m.Popularity
	}
	return 0
}

func (m *User) GetPreviewMessage() bool {
	if m != nil {
		return m.PreviewMessage
	}
	return false
}

func (m *User) GetShowMomentLikes() bool {
	if m != nil {
		return m.ShowMomentLikes
	}
	return false
}

func (m *User) GetWorkActive() bool {
	if m != nil {
		return m.WorkActive
	}
	return false
}

func (m *User) GetStudyActive() bool {
	if m != nil {
		return m.StudyActive
	}
	return false
}

func (m *User) GetScenarioIds() []string {
	if m != nil {
		return m.ScenarioIds
	}
	return nil
}

func (m *User) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *User) GetExpiresTime() int64 {
	if m != nil {
		return m.ExpiresTime
	}
	return 0
}

func (m *User) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *User) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto1.RegisterType((*Tag)(nil), "proto.Tag")
	proto1.RegisterType((*Answer)(nil), "proto.Answer")
	proto1.RegisterType((*Account)(nil), "proto.Account")
	proto1.RegisterType((*Tlation)(nil), "proto.Tlation")
	proto1.RegisterType((*Region)(nil), "proto.Region")
	proto1.RegisterType((*Media)(nil), "proto.Media")
	proto1.RegisterType((*Pass)(nil), "proto.Pass")
	proto1.RegisterType((*User)(nil), "proto.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserServer service

type UserServerClient interface {
	UserUpdate(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
}

type userServerClient struct {
	cc *grpc.ClientConn
}

func NewUserServerClient(cc *grpc.ClientConn) UserServerClient {
	return &userServerClient{cc}
}

func (c *userServerClient) UserUpdate(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/proto.UserServer/UserUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserServer service

type UserServerServer interface {
	UserUpdate(context.Context, *User) (*User, error)
}

func RegisterUserServerServer(s *grpc.Server, srv UserServerServer) {
	s.RegisterService(&_UserServer_serviceDesc, srv)
}

func _UserServer_UserUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServerServer).UserUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserServer/UserUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServerServer).UserUpdate(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserServer",
	HandlerType: (*UserServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserUpdate",
			Handler:    _UserServer_UserUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto1.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0x5d, 0x73, 0x1b, 0x35,
	0x17, 0x7e, 0x1d, 0x7f, 0xcb, 0x69, 0xda, 0xaa, 0x7d, 0x83, 0x28, 0x25, 0x98, 0x2d, 0x6d, 0x4d,
	0x81, 0x5e, 0x84, 0x19, 0x18, 0xee, 0x30, 0x4e, 0x20, 0x6e, 0xed, 0x10, 0x36, 0x69, 0x3a, 0xf4,
	0x4e, 0xf1, 0x8a, 0xb5, 0x88, 0xbd, 0xf2, 0x48, 0xda, 0x38, 0xfe, 0x53, 0xfc, 0x12, 0xf8, 0x39,
	0xdc, 0x33, 0xe7, 0x9c, 0xdd, 0xcd, 0x3a, 0x06, 0x66, 0xb8, 0xf2, 0x3e, 0xcf, 0x39, 0xd2, 0xf9,
	0x3e, 0x32, 0x63, 0xa9, 0x53, 0xf6, 0xe5, 0xc2, 0x1a, 0x6f, 0x78, 0x1d, 0x7f, 0x82, 0xaf, 0x59,
	0xf5, 0x4c, 0xc6, 0xfc, 0x21, 0xab, 0x9f, 0xcb, 0x59, 0xaa, 0x44, 0xa5, 0x5b, 0xe9, 0xb5, 0x43,
	0x02, 0xfc, 0x11, 0x6b, 0x0d, 0xa4, 0x57, 0xb1, 0xb1, 0x2b, 0xb1, 0x85, 0x82, 0x02, 0x07, 0xdf,
	0xb2, 0x46, 0x3f, 0x71, 0x4b, 0x65, 0xf9, 0x1e, 0x63, 0x3f, 0xa5, 0xca, 0x79, 0x6d, 0x92, 0x61,
	0x94, 0x5d, 0x50, 0x62, 0xf8, 0x6e, 0xae, 0x99, 0xdd, 0x91, 0xa1, 0xe0, 0x1b, 0xd6, 0xec, 0x4f,
	0x26, 0x26, 0x4d, 0xfc, 0x3f, 0x98, 0x17, 0xac, 0x79, 0xac, 0xfc, 0xd2, 0xd8, 0xcb, 0xec, 0x64,
	0x0e, 0x83, 0x9f, 0x59, 0xf3, 0x6c, 0x26, 0xe1, 0x7e, 0xbe, 0xc3, 0xb6, 0x0a, 0xab, 0x5b, 0xc3,
	0x08, 0xf0, 0xbb, 0x69, 0xa6, 0xbf, 0xf5, 0x6e, 0x0a, 0xf8, 0x30, 0x11, 0x55, 0xc2, 0x87, 0xa8,
	0xff, 0xda, 0x88, 0x1a, 0xe1, 0xd7, 0x06, 0xf0, 0x2b, 0x29, 0xea, 0x84, 0x5f, 0xc9, 0xe0, 0xb7,
	0x0a, 0x6b, 0x84, 0x2a, 0x86, 0xab, 0x7b, 0xac, 0x39, 0x00, 0xf7, 0xec, 0x0a, 0xef, 0xef, 0xec,
	0xef, 0x50, 0xee, 0x5e, 0x66, 0xb6, 0xc3, 0x5c, 0xcc, 0x5f, 0xb0, 0xd6, 0x89, 0x35, 0x57, 0x3a,
	0x99, 0x28, 0x34, 0xbd, 0xa9, 0x5a, 0xc8, 0x79, 0xc0, 0x6a, 0x03, 0xed, 0x57, 0xe8, 0xd2, 0xa6,
	0x1e, 0xca, 0xe0, 0xbe, 0x03, 0xed, 0xbc, 0xd5, 0x13, 0x8f, 0xae, 0xfe, 0xcd, 0x7d, 0xb9, 0x3c,
	0xf8, 0xb3, 0xca, 0xea, 0x63, 0x15, 0x69, 0xb9, 0x91, 0x8a, 0x5d, 0xd6, 0x78, 0xe3, 0x94, 0x1d,
	0x46, 0x79, 0xe2, 0x09, 0xf1, 0x2e, 0xeb, 0x0c, 0xac, 0x92, 0x5e, 0x45, 0x67, 0x7a, 0xae, 0xd0,
	0x91, 0x6a, 0x58, 0xa6, 0x40, 0xe3, 0xcd, 0x22, 0x2a, 0x34, 0x6a, 0xa4, 0x51, 0xa2, 0xa0, 0x62,
	0xc3, 0x24, 0x52, 0xd7, 0x98, 0xb9, 0x7a, 0x48, 0x00, 0x5a, 0x61, 0x18, 0xa9, 0xc4, 0xeb, 0x5f,
	0xb4, 0xb2, 0xa2, 0x41, 0xad, 0x70, 0xc3, 0xc0, 0xa9, 0xb7, 0x3a, 0xf2, 0x53, 0xd1, 0xa4, 0x53,
	0x08, 0xc0, 0xcf, 0x23, 0xa5, 0xe3, 0xa9, 0x17, 0x2d, 0xa4, 0x33, 0x04, 0xda, 0x07, 0x47, 0xd2,
	0x4d, 0x45, 0xbb, 0x5b, 0xe9, 0xd5, 0x42, 0x02, 0xe0, 0xdb, 0x79, 0xc9, 0x08, 0x43, 0x23, 0x65,
	0x0a, 0xee, 0x3b, 0x27, 0x33, 0x1d, 0xba, 0x8f, 0x10, 0xf4, 0xd3, 0x79, 0x66, 0x68, 0x1b, 0x05,
	0x39, 0xe4, 0x8f, 0x59, 0xfb, 0xfc, 0x20, 0xb5, 0x98, 0x5a, 0x71, 0xa7, 0x5b, 0xe9, 0x55, 0xc2,
	0x1b, 0x02, 0x2c, 0xf6, 0x4b, 0x16, 0x77, 0xc8, 0x62, 0x89, 0x82, 0xf3, 0xfd, 0xe2, 0xfc, 0x5d,
	0x3a, 0x5f, 0x10, 0xe0, 0xcf, 0xa9, 0x97, 0x3e, 0x75, 0xe2, 0x1e, 0xd5, 0x81, 0x10, 0xbf, 0xc7,
	0xaa, 0xa1, 0x9a, 0x89, 0xfb, 0x48, 0xc2, 0x27, 0x44, 0xfc, 0xbd, 0xb6, 0xce, 0x0b, 0xde, 0xad,
	0xf4, 0x5a, 0x21, 0x01, 0x60, 0x7f, 0xf4, 0x53, 0x65, 0xc5, 0x03, 0x62, 0x11, 0x04, 0xbf, 0x57,
	0x58, 0xed, 0x44, 0x3a, 0xf7, 0x5f, 0xca, 0x8e, 0x27, 0x33, 0x21, 0x8d, 0x44, 0x99, 0x02, 0x43,
	0xd8, 0xd1, 0x58, 0xf0, 0x7a, 0x48, 0x00, 0x59, 0x6c, 0x83, 0x3a, 0xb6, 0x01, 0x01, 0x60, 0x47,
	0xc8, 0x36, 0x88, 0x45, 0x00, 0x89, 0x18, 0x99, 0x24, 0xd6, 0x3e, 0x8d, 0x14, 0x16, 0xb9, 0x12,
	0xde, 0x10, 0xb0, 0x4f, 0x46, 0xd2, 0x93, 0xb0, 0x85, 0xc2, 0x02, 0x07, 0x7f, 0x30, 0x56, 0x03,
	0x37, 0x36, 0xc2, 0xe1, 0xac, 0x76, 0x2c, 0xe7, 0x2a, 0x0b, 0x06, 0xbf, 0x21, 0x73, 0x07, 0xca,
	0x65, 0x21, 0xc0, 0x27, 0x5c, 0x3d, 0x4c, 0xa2, 0xd4, 0xc1, 0xb0, 0xd2, 0x70, 0x17, 0x18, 0xea,
	0x3e, 0x30, 0xf3, 0x85, 0x4c, 0x56, 0xd9, 0x9c, 0xe7, 0x10, 0xfa, 0xf5, 0x40, 0x2d, 0xa4, 0xf5,
	0x73, 0x95, 0xf8, 0xbc, 0x5f, 0x6f, 0x18, 0xac, 0xdc, 0x64, 0x6a, 0xcc, 0x0c, 0x63, 0x81, 0xca,
	0x21, 0x82, 0xe0, 0xc7, 0xf2, 0x57, 0x63, 0x31, 0x8a, 0x76, 0x48, 0x00, 0x7c, 0x38, 0x32, 0x73,
	0xe5, 0xcd, 0x32, 0xc1, 0x96, 0x6d, 0x87, 0x05, 0x46, 0x99, 0x4c, 0x62, 0x93, 0x7a, 0x97, 0xb5,
	0x6c, 0x81, 0xf9, 0x1e, 0xab, 0x9d, 0xc9, 0xd8, 0x89, 0x4e, 0xb7, 0xda, 0xeb, 0xec, 0xb3, 0x7c,
	0xd2, 0x65, 0x1c, 0x22, 0x0f, 0xdb, 0x20, 0x5b, 0x94, 0x4e, 0x6c, 0xa3, 0x4e, 0xbe, 0x0d, 0x32,
	0x3a, 0x2c, 0xe4, 0xfc, 0x39, 0x6b, 0xd2, 0x7a, 0x75, 0xe2, 0x0e, 0xaa, 0xde, 0xc9, 0x55, 0x91,
	0x0d, 0x73, 0x29, 0x84, 0xf6, 0x83, 0x4a, 0xa2, 0xa2, 0x9f, 0x33, 0x04, 0xc9, 0x1a, 0x19, 0x73,
	0xa9, 0x93, 0x18, 0x1b, 0xb9, 0x1d, 0xe6, 0x10, 0x4e, 0x0c, 0x13, 0x0f, 0x89, 0xca, 0xda, 0x98,
	0xd0, 0x7a, 0xcd, 0xef, 0xff, 0x5b, 0xcd, 0xf9, 0x7a, 0xcd, 0x41, 0x06, 0x6b, 0x4c, 0xc2, 0xda,
	0x7c, 0x40, 0xb2, 0x1c, 0xf3, 0xa7, 0xf9, 0x1a, 0x16, 0x0f, 0x71, 0x01, 0xe6, 0x71, 0x10, 0x19,
	0xe6, 0x3b, 0x7a, 0x97, 0x35, 0x42, 0x19, 0xe9, 0xd4, 0x89, 0xff, 0xd3, 0xac, 0x13, 0x02, 0x7e,
	0x2c, 0xaf, 0xfb, 0xb1, 0x12, 0xbb, 0xc4, 0x13, 0x42, 0x5e, 0x27, 0xc0, 0xbf, 0x97, 0xf1, 0x88,
	0xf0, 0xa9, 0x33, 0x89, 0x97, 0x13, 0xef, 0x84, 0xc0, 0x31, 0x2b, 0x30, 0x7f, 0xc6, 0x76, 0xc6,
	0xa9, 0x4f, 0xe5, 0xac, 0xd0, 0x78, 0x1f, 0x35, 0x6e, 0xb1, 0xd0, 0x15, 0x87, 0x73, 0xa9, 0x67,
	0xe2, 0x11, 0x75, 0x05, 0x02, 0xdc, 0xb6, 0xf4, 0x4c, 0x0c, 0x4c, 0xa4, 0xc4, 0x07, 0x68, 0xb6,
	0x4c, 0xf1, 0x80, 0x6d, 0x8f, 0xcd, 0x85, 0x9e, 0xa9, 0xe3, 0x74, 0x7e, 0xa1, 0xac, 0x78, 0x8c,
	0xc7, 0xd7, 0x38, 0xf0, 0x0f, 0x86, 0x7d, 0x69, 0x6c, 0x24, 0x3e, 0xa4, 0xfe, 0xc9, 0x31, 0x14,
	0xe0, 0x3b, 0x6d, 0xfd, 0x14, 0xb6, 0xb3, 0xd8, 0xc3, 0x71, 0xbc, 0x21, 0x78, 0x8f, 0xb5, 0x4e,
	0xf4, 0xc4, 0xa7, 0x56, 0x39, 0xf1, 0x11, 0xb6, 0xc4, 0x76, 0x96, 0x4a, 0x7c, 0x35, 0xc2, 0x42,
	0x0a, 0x7e, 0x8c, 0xa4, 0xf3, 0xfd, 0x89, 0xd7, 0x57, 0xf0, 0x42, 0x75, 0xf1, 0xaa, 0x35, 0xee,
	0xf6, 0xcb, 0xf0, 0xf1, 0xe6, 0xcb, 0x70, 0xeb, 0x75, 0x09, 0x36, 0x5f, 0x97, 0x27, 0xac, 0x01,
	0xbe, 0x5f, 0xac, 0xc4, 0x13, 0x2c, 0x6d, 0x27, 0xf3, 0x07, 0xc8, 0x30, 0x13, 0xc1, 0x68, 0x9e,
	0x98, 0x45, 0x3a, 0x93, 0x16, 0x5c, 0xf9, 0x04, 0xbb, 0xa3, 0xc4, 0x40, 0x51, 0x4e, 0xac, 0xba,
	0xd2, 0x6a, 0x39, 0x56, 0xce, 0xc9, 0x58, 0x89, 0xa7, 0x54, 0x94, 0x75, 0x96, 0xf7, 0xd8, 0xdd,
	0xd3, 0xa9, 0x59, 0x8e, 0x0d, 0x0c, 0xf4, 0x48, 0x5f, 0x2a, 0x27, 0x9e, 0xa1, 0xe2, 0x6d, 0x1a,
	0x2c, 0xbe, 0x35, 0xf6, 0x12, 0x43, 0x55, 0xe2, 0x39, 0x2a, 0x95, 0x18, 0x08, 0xec, 0xd4, 0xa7,
	0xd1, 0x2a, 0x53, 0xe8, 0xa1, 0x42, 0x99, 0x42, 0x8d, 0x89, 0x4a, 0xa4, 0xd5, 0x66, 0x18, 0x39,
	0xf1, 0x69, 0xb7, 0x0a, 0x1b, 0xb6, 0x44, 0xad, 0xfd, 0xa3, 0x7a, 0xb1, 0xfe, 0x8f, 0x0a, 0x4e,
	0x1f, 0x5e, 0x2f, 0xb4, 0x55, 0x0e, 0x13, 0xf7, 0x19, 0x25, 0xae, 0x44, 0x95, 0x1e, 0x92, 0xcf,
	0xd7, 0x1e, 0x12, 0xce, 0x6a, 0x67, 0xab, 0x85, 0x12, 0x5f, 0xd0, 0x8a, 0x84, 0xef, 0xfd, 0xaf,
	0x18, 0x83, 0x75, 0x7a, 0xaa, 0xec, 0x95, 0xb2, 0xbc, 0x47, 0x88, 0xea, 0xc4, 0xf3, 0x84, 0x03,
	0xf5, 0xa8, 0x0c, 0x82, 0xff, 0x5d, 0x34, 0x10, 0x7d, 0xf9, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xe2, 0x8b, 0x57, 0x2d, 0x2c, 0x0a, 0x00, 0x00,
}
